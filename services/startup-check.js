const User = require('../models/User');

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç streak –∏ subscription –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
class StartupCheckService {
  /**
   * –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
   */
  static async runAllChecks() {
    console.log('üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    try {
      await this.checkAndUpdateStreaks();
      await this.checkAndUpdateSubscriptions();
      
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ streak –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   * –õ–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 2 –¥–Ω–µ–π —Å lastVisit, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º streak –Ω–∞ 0
   * –ó–∞–ø–∞—Å 1 –¥–µ–Ω—å: –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è 21, –∞ lastVisit –±—ã–ª 20 - –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
   *                –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è 22, –∞ lastVisit –±—ã–ª 20 - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º (–ø—Ä–æ—à–ª–æ 2 –¥–Ω—è)
   */
  static async checkAndUpdateStreaks() {
    console.log('üìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ streak...');
    
    try {
      const users = await User.find({ lastVisit: { $ne: null } });
      const now = new Date();
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      
      let updatedCount = 0;
      
      for (const user of users) {
        const lastVisit = new Date(user.lastVisit);
        const lastVisitDay = new Date(lastVisit.getFullYear(), lastVisit.getMonth(), lastVisit.getDate());
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ –¥–Ω—è—Ö
        const diffDays = Math.floor((today - lastVisitDay) / (1000 * 60 * 60 * 24));
        
        // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 1 –¥–Ω—è (—Ç–æ –µ—Å—Ç—å 2 –∏–ª–∏ –±–æ–ª—å—à–µ), —Å–±—Ä–∞—Å—ã–≤–∞–µ–º streak
        if (diffDays > 1 && user.streak > 0) {
          user.streak = 0;
          await user.save();
          updatedCount++;
          console.log(`  ‚Ü≥ Streak —Å–±—Ä–æ—à–µ–Ω –¥–ª—è ${user.email} (–ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: ${lastVisit.toISOString().split('T')[0]}, –ø—Ä–æ—à–ª–æ –¥–Ω–µ–π: ${diffDays})`);
        }
      }
      
      if (updatedCount > 0) {
        console.log(`  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ streak —É ${updatedCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      } else {
        console.log(`  ‚úì –í—Å–µ streak –∞–∫—Ç—É–∞–ª—å–Ω—ã`);
      }
    } catch (error) {
      console.error('  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ streak:', error);
      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   * –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ free
   */
  static async checkAndUpdateSubscriptions() {
    console.log('üíé –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    try {
      const users = await User.find({ 
        subscriptionType: 'pro',
        subscriptionExpiresAt: { $ne: null }
      });
      
      const now = new Date();
      let updatedCount = 0;
      
      for (const user of users) {
        const expiresAt = new Date(user.subscriptionExpiresAt);
        
        // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
        if (now > expiresAt) {
          user.subscriptionType = 'free';
          user.isPro = false;
          user.subscriptionExpiresAt = null;
          await user.save();
          updatedCount++;
          console.log(`  ‚Ü≥ –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ –¥–ª—è ${user.email} (–∏—Å—Ç–µ–∫–ª–∞: ${expiresAt.toISOString().split('T')[0]})`);
        }
      }
      
      if (updatedCount > 0) {
        console.log(`  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–¥–ø–∏—Å–æ–∫ —É ${updatedCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      } else {
        console.log(`  ‚úì –í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã`);
      }
    } catch (error) {
      console.error('  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:', error);
      throw error;
    }
  }

  /**
   * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
   * @param {Date} expiresAt - –¥–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
   * @returns {number} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è (–∏–ª–∏ 0 –µ—Å–ª–∏ –∏—Å—Ç–µ–∫–ª–∞)
   */
  static calculateRemainingDays(expiresAt) {
    if (!expiresAt) return 0;
    
    const now = new Date();
    const expires = new Date(expiresAt);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –Ω–∞—á–∞–ª–æ –¥–Ω—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞
    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());
    const expiresStart = new Date(expires.getFullYear(), expires.getMonth(), expires.getDate());
    
    const diffMs = expiresStart - todayStart;
    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));
    
    return Math.max(0, diffDays);
  }
}

module.exports = StartupCheckService;

